package com.study.member.service;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.ui.Model;

import com.study.member.dao.MemberDao;
import com.study.member.vo.MemberVO;

@Service
public class MemberServiceImpl implements MemberService {

	@Autowired
	MemberDao md;
	
	@Override
	public MemberVO getMember(String id) {
		// id를 getMember 메서드에 보내 id와 일치하는 테이블데이터를 MemberVO 타입 변수 res에 저장 후 return
		MemberVO res=md.getMember(id);
		return res;
	}

	@Override
	public int insertMember(MemberVO member) {
		// form 데이터를 insertMember 메서드에 보내 테이블데이터로 저장 후 결과를 result 변수에 저장 후 return
		int result = md.insertMember(member);
		return result;
	}

	@Override
	public int idCheck(String id) {
		// 요청 매개변수 id를 idCheck 메서드에 보내 테이블데이터 중 id와 동일할 mem_id의 개수를 result 변수에 저장 후 return
		int result = md.idCheck(id);
		return result;
	}

	@Override
	public void memberInfo(Model model, String id) {
		// memberInfo 메서드에 요청 매개변수 id를 보내고 id와 동일한 mem_id의 테이블데이터(value)를 Model(model) 객체에 "info"(name)로 저장
		model.addAttribute("info", md.memberInfo(id));
	}

	@Override
	public String infoUpdate(MemberVO member, HttpServletRequest request) {
		// infoUpdate 메서드에 form 데이터(memName, memId, memPass, memMail)을 보내 memId와 mem_id가 동일한 테이블데이터를 업데이트 한 결과를 result 변수에 저장 
		int result=md.infoUpdate(member);
		// String 변수 msg와 url에 각각 result==1 일 경우와 아닐 경우의 메시지와 경로를 저장
		String msg, url;
		if(result==1) {
			msg="정보가 수정되었습니다.";
			url="/member/memberInfo?id="+member.getMemId();
		} else {
			msg="오류가 발생하였습니다.";
			url="/member/memberInfo?id="+member.getMemId();
		}
		String message=null;
		// getContentPath() : http://localhost:8080 즉, 프로젝트 path를 가져옴
		String path=request.getContextPath();
		// message 변수에 script 태그를 통해 alert 메시지와 경로를 저장 후 return
		message="<script>alert('"+msg+"');";
		message+="location.href='"+path+url+"';</script>";
		return message;
	}

	@Override
	public void memberDelete(String id) {
		// memberDelete 메서드에 요청 매개변수 id를 보내 id와 mem_id가 동일한 테이블데이터 삭제
		md.memberDelete(id);
	}

	
}
